openapi: "3.0.0"
info:
  title: App API documentation
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api/v1
paths:
  /dealership:
    put:
      description: Creates new dealership
      responses:
        '200':
          description: Dealerships created successfully
          content:
            application/json:
              schema:
                - $ref: "#/components/schemas/Dealerships"
        '400':
          description: wrong object 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /dealership/{id}:
    parameters:
        - name: id
          in: path
          description: ID of dealership
          required: true
          schema:
            type: integer
            format: int64
    get:
      description: Gets dealership by ID
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dealerships"
        '404':
          description: object doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates dealership fields
      responses:
        '200':
          description: Dealership updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dealerships"
        '400':
          description: wrong parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /dealerships:
  get:
    description: List all dealerships
    responses:
      '200':
        description: A list of dealerships
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dealerships"

  /dealership/cars/{dealershipID}:
    get:
      description: List all cars in dealerships
      responses:
        '200':
          description: A list cars in dealerships
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dealerships"
  /cars:
    get:
      description: Returns all Cars
      responses:
        '200':
          description: list of Cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cars"
  /car:
    post:
      description: creates Car object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarP"
      responses:
        '201':
          description: object created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        '400':
          description: wrong parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cars/{id}:
    parameters:
      - name: id
        in: path
        description: ID of car
        required: true
        schema:
          type: integer
          format: int64
    get:
      description: Returns Car object by ID
      responses:
        '200':
          description: Car object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        '404':
          description: Car doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: deletes Car object with specified ID
      responses:
        '200':
          description: Car object deleted
        '404':
          description: Car doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      description: replaces Car object by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarP"

      responses:
        '200':
          description: Car object was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cars"
        '400':
          description: wrong parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Pet object wasn't found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Dealerships:
        type: array
        items:
          $ref: "#/components/schemas/Dealerships"
    Cars:
      type: array
      items:
        $ref: "#/components/schemas/Cars"

    Dealership:
        type: object
        required:
          - id
          - name
          - address
          - brand
        properties:
          id: 
            type: integer
            format: int64
          name: 
            type: string
          address: 
            type: string
          brand: 
            type: string

    Car:
      type: object
      required:
        - id
        - name
        - model
        - brand
        - power
        - volume
      properties:
        id: 
          type: integer
          format: int64
        name: 
          type: string
        model: 
          type: string
        brand: 
          type: string
        power: 
          type: integer
          format: int64
        volume: 
          type: integer
          format: int64

    CarP:
      type: object
      required:
        - id
        - name
        - model
        - brand
        - power
        - volume
        - dealerships_id
      properties:
        id: 
          type: integer
          format: int64
        name: 
          type: string
        model: 
          type: string
        brand: 
          type: string
        power: 
          type: integer
          format: int64
        volume: 
          type: integer
          format: int64
        dealerships_id: 
          type: integer
          format: int64

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string